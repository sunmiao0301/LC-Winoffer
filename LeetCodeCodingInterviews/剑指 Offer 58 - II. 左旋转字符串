//第一版
方法很朴素 结果很差
class Solution {
    public String reverseLeftWords(String s, int n) {
    //想不到什么巧妙的方式
    String left = s.substring(0, n);
    String right = s.substring(n);
    for(int i = 0; i < left.length(); i++){
        right += left.substring(i, i + 1);
    }
    return right;
    }
}

//第二版
看了一下题目要求 没要求反过来 我犯傻了
执行结果：
通过
执行用时：
0 ms
, 在所有 Java 提交中击败了
100.00%
的用户
内存消耗：
38.2 MB
, 在所有 Java 提交中击败了
60.06%
的用户
class Solution {
    public String reverseLeftWords(String s, int n) {
    return s.substring(n) + s.substring(0, n);
    }
}

/第三版 K神提出 如果面试不允许用切片函数 那么就要：
class Solution {
    public String reverseLeftWords(String s, int n) {
        String res = "";
        for(int i = n; i < s.length(); i++)
            res += s.charAt(i);
        for(int i = 0; i < n; i++)
            res += s.charAt(i);
        return res;
    }
}

如果利用求余运算，可以简化代码。
但是由于大部分人使用的都是substring等，所以用遍历一遍的方法效率很低：但是面试时有限定的时候必须用这种
执行结果：
通过
执行用时：
55 ms
, 在所有 Java 提交中击败了
6.93%
的用户
内存消耗：
38.5 MB
, 在所有 Java 提交中击败了
11.44%
的用户

class Solution {
    public String reverseLeftWords(String s, int n) {
        String res = "";
        for(int i = n; i < n + s.length(); i++)
            res += s.charAt(i % s.length());
        return res;
    }
}

