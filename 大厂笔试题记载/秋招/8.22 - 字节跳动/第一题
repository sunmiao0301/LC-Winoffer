1、求一个闭区间内的完美数字的个数

/*
直接遍历肯定不行，不能100%，得用密码锁法
求得到某个值为止的完美整数数的函数 然后相减即得范围内的完美整数数
*/
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt(), x = 0, y = 0;
        for(int i = 0; i < t; i++){
            x = sc.nextInt();
            y = sc.nextInt();
            System.out.println(helper(y) - helper(x));
        } 
    }
    static int helper(int x){
        int ret = 0;
        int bit = 0;
        int temp = x;
        int flag = x;
        int perfect = 0;
        int one = 1;
        while(temp != 0){
            if(temp < 10 && temp > 0)
                flag = temp;
            temp /= 10;
            bit++;
        }
        if(bit != 1)
            ret += (bit - 1) * 9;//把比他小一位的完美整数先加上 7 * 9 = 63 + 8 = 71 8 * 9 = 72
        else
            ret += bit;
        while(bit > 0){
            perfect += flag * one;
            bit--;
            one *= 10;
        }
        if(x > perfect)
            ret += flag;
        else
            ret += flag - 1;
        return ret;
    }
}
