1）
给定一个用字符串表示的m位非负整数N，去掉其中的x位数字后，使得剩下的数字Y最小。
注意：
m >= x;
N不会包含前导零，即首位一定是非0数字；
输入描述：
第一行：字符串数字N
第二行：x
输出描述：
剩下的字符串数字Y
示例：
输入：
1432319
3
输出：1219

2）
趋势科技有多个技术团队负责不同的产品开发，每个团队被称为一个Y Team,每个Y Team
的人数不一定相同。现在公司需要举办hackathon比赛，需要将所有人尽可能的平均的情况
下分成G个大组，每个Y Team的员工必须属于同一个大组，不能分开，请给出分组后的每
组人数按从大到小排列。
输入描述：
1，2，3，3，3，2，1
4
输出描述：
3，3，3，3

import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        //while (in.hasNextInt()) {// 注意，如果输入是多个测试用例，请通过while循环处理多个测试用例
        String N = in.next();
        int x = in.nextInt();
        if(N.length() == x){
            System.out.println("0");
        }else{//拿掉第一个起伏的数
            while(x > 0){
                
                for(int i = 0; i < N.length() - 1; i++){
                if(N.charAt(0) > N.charAt(1)){
                    N = N.substring(1);
                    break;
                }
                if(N.charAt(i) > N.charAt(i + 1)){
                	String
                    N = N.substring(0,i-1) + N.substring(i+1,N.length()-1);
                    //i--;
                    break;
                }
                if(i == N.length() - 2){
                    N = N.substring(0, N.length()-1);
                    break;
                }
            }
            x--;
            }
            System.out.println(N);
        }
    }
}

5.10//
注意break结束or循环，表达式3将不被执行，因为是直接退出这个for循环体了
但是continue不一样，continue结束for循环，表达式3仍被执行，因为是仅仅结束此次for的一次。
验证过程如下：

//注意
String str = "123";
str_new = str.substring(0,1);
System.out.println(str_new);
的输出是1 不是12！！！！！！
Returns a string that is a substring of this string. 
Thesubstring begins at the specified beginIndex andextends to the character at index endIndex - 1.
Thus the length of the substring is endIndex-beginIndex. 

//解决了上述问题 第一题就不难解决了
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        //while (in.hasNextInt()) {// 注意，如果输入是多个测试用例，请通过while循环处理多个测试用例
        String N = in.next();
        int x = in.nextInt();
        if(N.length() == x){
            System.out.println("0");
        }else{//拿掉第一个起伏的数
            while(x > 0){
                
                for(int i = 0; i < N.length() - 1; i++){
                if(N.charAt(0) > N.charAt(1)){//21 1 得到1
                    N = N.substring(1);
                    //x--;
                    break;
                }
                if(N.charAt(i) > N.charAt(i + 1)){//i是比后面数大的数
                	String N1 = N.substring(0,i) + N.substring(i+1);//这样赋值不行？,N.length()-1
                	N = N1;
                	//x--;
                    //i--;
                    break;
                }
                if(i == N.length() - 2){//123 1 得到12
                    N = N.substring(0, N.length()-1);
                    //x--;
                    break;
                }
            }
            x--;
            }
            System.out.println(N);
        }
    }
}
