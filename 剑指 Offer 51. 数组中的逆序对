//第一版
写完这一版 才发现思路是错误的
错误之处在于 大于这个数 确实是大于这个数的所有成逆序数的数
但是还有大于那些不与其构成逆序数的数
这样就会少算一部分逆序数对
class Solution {
    public int reversePairs(int[] nums) {
    /*
    首先想到的就是线性代数中 交换 的思想
    n = nums.length
    然后想到的就是动态规划 从后往前dp[n-1] = 0
    dp[n-2] 
    如果大于dp[n-1] 则 dp[n-2] = dp[n-1] + 1
    如果小于dp[n-1] 则继续比较其与dp[n] 直到找到第一个大于的 
    如果没找到（直到n）那么就 = 0\
    在这个过程中 每个得到的逆序数结果都不断加入到 ret 里面
    */
    int[] dp = new int[nums.length];
    dp[nums.length - 1] = 0;
    int ret = 0;
    for(int i = nums.length - 2; i >= 0; i--){
        int j = i + 1;
        while(j < nums.length){
            if(nums[i] > nums[j]){
                dp[i] = dp[j] + 1;
                ret += dp[i];
                break;
            }
            else if(nums[i] == nums[j]){
                dp[i] = dp[j];
                ret += dp[i];
                break;
            }
            else{
                j++;
            }
        }
        if(j == nums.length)
            dp[i] = 0;
    }
    return ret;
    }
}
